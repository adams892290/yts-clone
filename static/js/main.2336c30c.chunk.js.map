{"version":3,"sources":["Results.js","Search.js","App.js","index.js"],"names":["Torrents","props","torrent","type","quality","size","seeds","peers","href","url","Results","data","src","medium_cover_image","title_long","genres","map","ele","rating","year","torrents","Search","useState","movieName","setMovieName","setData","onSubmit","e","preventDefault","config","params","query_term","axios","get","then","res","movies","catch","err","console","log","htmlFor","id","onChange","target","value","length","App","ReactDOM","render","document","getElementById"],"mappings":"6JAEMA,EAAW,SAACC,GAAW,IACjBC,EAAYD,EAAZC,QACR,OACI,cADE,CACF,iBACI,6CAAcA,EAAQC,KAAtB,sBAAwCD,EAAQE,WAChD,4CAAaF,EAAQG,KAArB,oBAAqCH,EAAQI,MAA7C,oBAA8DJ,EAAQK,SACtE,mBAAGC,KAAMN,EAAQO,IAAjB,mDA+BGC,EAzBC,SAACT,GAAW,IAEhBU,EAASV,EAATU,KAER,OACI,cADE,CACF,iBACI,uBACA,qBAAKC,IAAKD,EAAKE,qBACf,uBACA,6BAAKF,EAAKG,aACV,6CACCH,EAAKI,OAAOC,KAAI,SAACC,GACd,OAAO,aAAD,CAAC,iBAAM,8BAAIA,EAAJ,YAEjB,uBACA,6CAAcN,EAAKO,UACnB,4BAAG,4BAAIP,EAAKQ,SACXR,EAAKS,SAASJ,KAAI,SAACC,GAChB,OAAO,aAAD,CAAE,EAAD,CAAUf,QAASe,WCyB3BI,EArDA,WAAO,IAAD,EAEiBC,mBAAS,IAF1B,mBAEVC,EAFU,KAECC,EAFD,OAGOF,mBAAS,IAHhB,mBAGVX,EAHU,KAGJc,EAHI,KAwBjB,OACI,cADE,CACF,iBACI,sEACA,+GACA,qIACA,4DACA,uBAAMC,SAzBO,SAACC,GAClBA,EAAEC,iBAEF,IAAMC,EAAS,CAAEC,OAAQ,CAAEC,WAAYR,IAEvCS,IAAMC,IAAI,yCAA0CJ,GAC/CK,MAAK,SAACC,GACHV,EAAQU,EAAIxB,KAAKA,KAAKyB,WAEzBC,OAAM,SAACC,GACJC,QAAQC,IAAIF,OAehB,UACI,uBAAOG,QAAQ,OAAf,0BACA,uBAAOtC,KAAK,OAAOuC,GAAG,OAAOC,SAZpB,SAAChB,GAClBH,EAAaG,EAAEiB,OAAOC,UAYd,2DAEFlC,GAAQA,EAAKmC,OAAS,EACpB,gCACI,+FACA,6JACCnC,EAAKK,KAAI,SAACC,GACP,OAAO,aAAD,CAAG,EAAF,CAAUN,KAAMM,GAAUA,EAAIyB,UAG7C,KAEF/B,GAAQA,EAAKmC,OAAS,EACpB,0CACA,KACFnC,EAAQ,KAAQ,oECtCfoC,EAXH,WAIR,OACI,aADE,CACF,gBACI,cAAC,EAAD,OCJZC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.2336c30c.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Torrents = (props) => {\n    const { torrent } = props;\n    return (\n        <div>\n            <h4>{`Type: ${torrent.type}, Quality: ${torrent.quality}`}</h4>\n            <p>{`Size: ${torrent.size}, Seeds: ${torrent.seeds}, Peers: ${torrent.peers}`}</p>\n            <a href={torrent.url}>Download this torrent amigo/amiga</a>\n\n        </div>\n    );\n}\n\nconst Results = (props) => {\n\n    const { data } = props;\n\n    return (\n        <div>\n            <hr />\n            <img src={data.medium_cover_image} />\n            <br />\n            <h2>{data.title_long}</h2>\n            <span>Generes: </span>\n            {data.genres.map((ele) => {\n                return <span><b>{ele} </b></span>\n            })}\n            <br />\n            <h3>{`IMDB: ${data.rating}`}</h3>\n            <p><b>{data.year}</b></p>\n            {data.torrents.map((ele) => {\n                return <Torrents torrent={ele} />\n            })}\n\n        </div>\n    );\n}\n\nexport default Results;","import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport Results from \"./Results\";\n\nconst Search = () => {\n\n    const [movieName, setMovieName] = useState(\"\");\n    const [data, setData] = useState([]);\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        const config = { params: { query_term: movieName } };\n\n        axios.get(\"https://yts.mx/api/v2/list_movies.json\", config)\n            .then((res) => {\n                setData(res.data.data.movies);\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n\n    }\n\n    const handleChange = (e) => {\n        setMovieName(e.target.value);\n    }\n\n    return (\n        <div>\n            <h3>Welcome to the world with no hassle!</h3>\n            <h4>Search your movie here without any annoying adds and download through torrent</h4>\n            <h4>If you don't know what torrent is ........ -_-. It's okay ,not all of us know about the good stuff.</h4>\n            <p>Be sure to check for typos!</p>\n            <form onSubmit={handleSubmit}>\n                <label htmlFor=\"name\">Movie Name: </label>\n                <input type=\"text\" id=\"name\" onChange={handleChange}></input>\n                <button >Show merci my lord</button>\n            </form>\n            {(data && data.length > 0) ? (\n                <div>\n                    <h3>Here you go! grab some popcorns, a soda and enjoy yourself :)</h3>\n                    <h2>And if this goddamn thing did save you from the unnecessary troubles ,spare some time to send good wishes to the developer!</h2>\n                    {data.map((ele) => {\n                        return < Results data={ele} key={ele.id} />\n                    })}\n                </div>\n            ) : null}\n\n            {(data && data.length > 0) ? (\n                <h4>Sayonara</h4>\n            ) : null}\n            {(data) ? null : (<h3>No movies, try something else!</h3>)}\n        </div >\n    );\n}\n\nexport default Search;","import React from \"react\";\nimport Search from \"./Search\";\n\nconst App = () => {\n\n\n\n    return (\n        <div>\n            <Search />\n        </div>\n    );\n}\n\nexport default App;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\n\nReactDOM.render(<App />, document.getElementById(\"root\"));"],"sourceRoot":""}